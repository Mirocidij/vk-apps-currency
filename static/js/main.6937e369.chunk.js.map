{"version":3,"sources":["panels/Home.js","img/persik.png","panels/Persik.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","Panel","PanelHeader","Group","header","Header","mode","Cell","before","photo_200","Avatar","src","description","city","title","first_name","last_name","Div","Button","stretched","size","onClick","data-to","Persik","props","onMouseOver","console","log","left","PanelHeaderBack","className","persik","alt","App","useState","activePanel","setActivePanel","setUser","ScreenSpinner","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","View","ReactDOM","render","getElementById"],"mappings":"gVAgDeA,EApCF,SAAC,GAAD,IAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,GAAIC,EAAV,EAAUA,YAAV,OACT,eAACC,EAAA,EAAD,CAAOH,GAAIA,EAAX,UACI,cAACI,EAAA,EAAD,wCACCF,GACD,cAACG,EAAA,EAAD,CAAOC,OAAQ,cAACC,EAAA,EAAD,CAAQC,KAAK,YAAb,8CAAf,SACI,cAACC,EAAA,EAAD,CACIC,OAAQR,EAAYS,UAAY,cAACC,EAAA,EAAD,CAAQC,IAAKX,EAAYS,YAAe,KACxEG,YAAaZ,EAAYa,MAAQb,EAAYa,KAAKC,MAAQd,EAAYa,KAAKC,MAAQ,GAFvF,mBAIQd,EAAYe,WAJpB,YAIkCf,EAAYgB,eAIlD,cAACb,EAAA,EAAD,CAAOC,OAAQ,cAACC,EAAA,EAAD,CAAQC,KAAK,YAAb,gCAAf,SACI,cAACW,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,WAAS,EAACC,KAAK,IAAId,KAAK,YAAYe,QAAStB,EAAIuB,UAAQ,SAAjE,gD,QC3BD,MAA0B,mCC6B1BC,G,OAnBA,SAAAC,GAAK,OAChB,eAACvB,EAAA,EAAD,CAAOH,GAAI0B,EAAM1B,GAAjB,UACI,cAACI,EAAA,EAAD,CACIuB,YAAa,WACTC,QAAQC,IAAI,mBAEhBC,KAAM,cAACC,EAAA,EAAD,CAAiBR,QAASG,EAAMzB,GAAIuB,UAAQ,SAJtD,oBAQA,qBAAKQ,UAAU,SAASnB,IAAKoB,EAAQC,IAAI,wBC6BlCC,EAvCH,WAAO,IAAD,EACwBC,mBAAS,QADjC,mBACPC,EADO,KACMC,EADN,OAEiBF,mBAAS,MAF1B,mBAEPlC,EAFO,KAEMqC,EAFN,OAGcH,mBAAS,cAACI,EAAA,EAAD,CAAelB,KAAK,WAH3C,mBAGPmB,EAHO,KAGCC,EAHD,KAKdC,qBAAU,WAAM,4CASZ,4BAAAC,EAAA,sEACuBC,IAAOC,KAAK,uBADnC,OACUC,EADV,OAEIR,EAAQQ,GACRL,EAAU,MAHd,4CATY,sBACZG,IAAOG,WAAU,YAA6B,IAAD,IAA1BC,OAASC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAC9B,GAAa,yBAATD,EAAiC,CACjC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALlC,mCAeZQ,KACD,IAEH,IAAM3D,EAAK,SAAA4D,GACPvB,EAAeuB,EAAEC,cAAcC,QAAQC,KAG3C,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,eAACC,EAAA,EAAD,CAAM5B,YAAaA,EAAaI,OAAQA,EAAxC,UACI,cAAC,EAAD,CAAMzC,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,cAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,YCpC5C4C,IAAOC,KAAK,gBAEZoB,IAASC,OAAO,cAAC,EAAD,IAAQd,SAASe,eAAe,W","file":"static/js/main.6937e369.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nconst Home = ({id, go, fetchedUser}) => (\n    <Panel id={id}>\n        <PanelHeader>Andrey Mokretsov is gay))</PanelHeader>\n        {fetchedUser &&\n        <Group header={<Header mode=\"secondary\">User Data Fetched with VK Bridge</Header>}>\n            <Cell\n                before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n            >\n                {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n            </Cell>\n        </Group>}\n\n        <Group header={<Header mode=\"secondary\">Navigation Example</Header>}>\n            <Div>\n                <Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"persik\">\n                    Show me the Persik, please\n                </Button>\n            </Div>\n        </Group>\n    </Panel>\n);\n\nHome.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderBack from '@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst Persik = props => (\n    <Panel id={props.id}>\n        <PanelHeader\n            onMouseOver={() => {\n                console.log(\"On mouse hover\")\n            }}\n            left={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\n        >\n            Persik\n        </PanelHeader>\n        <img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n    </Panel>\n);\n\nPersik.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, {useState, useEffect} from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport {AdaptivityProvider, AppRoot} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n    const [activePanel, setActivePanel] = useState('home');\n    const [fetchedUser, setUser] = useState(null);\n    const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\n\n    useEffect(() => {\n        bridge.subscribe(({detail: {type, data}}) => {\n            if (type === 'VKWebAppUpdateConfig') {\n                const schemeAttribute = document.createAttribute('scheme');\n                schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n                document.body.attributes.setNamedItem(schemeAttribute);\n            }\n        });\n\n        async function fetchData() {\n            const user = await bridge.send('VKWebAppGetUserInfo');\n            setUser(user);\n            setPopout(null);\n        }\n\n        fetchData();\n    }, []);\n\n    const go = e => {\n        setActivePanel(e.currentTarget.dataset.to);\n    };\n\n    return (\n        <AdaptivityProvider>\n            <AppRoot>\n                <View activePanel={activePanel} popout={popout}>\n                    <Home id='home' fetchedUser={fetchedUser} go={go}/>\n                    <Persik id='persik' go={go}/>\n                </View>\n            </AppRoot>\n        </AdaptivityProvider>\n    );\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n    import(\"./eruda\").then(({default: eruda}) => {\n    }); //runtime download\n}\n"],"sourceRoot":""}